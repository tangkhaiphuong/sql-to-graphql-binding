<#@ assembly name="System.Runtime" #>
<#@ assembly name="System.Globalization" #>
<#@ include file="..\Configure.tt" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated.
// 
using System.CodeDom.Compiler;
using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore;

// ReSharper disable once IdentifierTypo
namespace Contoso.Unicorn.Entities
{
    /// <inheritdoc />
    [SuppressMessage("ReSharper", "UnusedMember.Global")]
    [SuppressMessage("ReSharper", "MemberHidesStaticFromOuterClass")]
    [SuppressMessage("ReSharper", "InconsistentNaming")]
    [SuppressMessage("ReSharper", "PartialTypeWithSinglePart")]
    [GeneratedCode("TextTemplatingFileGenerator", "1.0.0")]
    public partial class UnicornContext : DbContext
    {<#
    foreach(var table in GetUnicornDefinitions()) 
    {
        var tableName = table.Key.TableName;
        var schemaName = table.Key.SchemaName;
        if (schemaName == "dbo")
        {
#>

        /// <summary>
        /// Gets or sets table <#=ToHuman(tableName).ToLower() #>.
        /// </summary>
        public virtual DbSet<<#= tableName #>Entity> <#=  ToPlural(tableName) #> { get; set; }
<#
        }
        else
        {
#>

        protected virtual DbSet<<#=  ToPascal(schemaName) #>.<#= tableName #>Entity> _<#= ToPascal(schemaName) #><#= ToPlural(tableName) #> { get; set; }
<#
        }
    }

    foreach(var schema in GetUnicornDefinitions().SelectMany(c => c).GroupBy(c => c["SchemaName"])) 
    {
        var schemaName = ToPascal(schema.Key.ToString());
        if (schemaName != "Dbo")
        {
#>

        /// <summary>
        /// Gets schema <#= ToHuman(schemaName).ToLower() #>.
        /// </summary>
        public virtual <#=  schemaName #>Context <#=  schemaName #> => new <#=  schemaName #>Context(this);

        /// <summary>
        /// Schema <#= ToHuman(schemaName).ToLower() #> context.
        /// </summary> 
        public class <#=  schemaName #>Context
        {
            private readonly UnicornContext _unicornContext;

            public <#=  schemaName #>Context(UnicornContext unicornContext) => _unicornContext = unicornContext;

<#
            foreach (var table2 in schema.GroupBy(c => c["TableName"]))
            {
                var tableName2 = table2.First()["TableName"].ToString();
#>
            /// <summary>
            /// Gets or sets table <#= ToHuman(tableName2).ToLower() #>.
            /// </summary>
            public virtual DbSet<<#= schemaName + "." + tableName2 #>Entity> <#= ToPlural(tableName2) #> => _unicornContext.Set<<#= schemaName + "." + tableName2 #>Entity>();
<#
            }
#>        }
<#
        }
    }
#>
    }
}
