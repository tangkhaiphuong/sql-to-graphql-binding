<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Runtime" #>
<#@ assembly name="System.Globalization" #>
<#@ include file="..\Configure.tt" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated.
// 
using System.Diagnostics.CodeAnalysis;
using System.CodeDom.Compiler;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
<#
    foreach (var table in GetUnicornDefinitions())
    {
        var tableName = table.Key.TableName;
        var schemaName = table.Key.SchemaName;
#>

// ReSharper disable once IdentifierTypo
namespace Contoso.Unicorn.Entities<#= schemaName == "dbo" ? "" : "." + ToPascal(schemaName)#>
{
    /// <summary>
    /// Definition of table <#= ToHuman(tableName).ToLower() #>.
    /// </summary>
    [SuppressMessage("ReSharper", "UnusedMember.Global")]
    [SuppressMessage("ReSharper", "MemberHidesStaticFromOuterClass")]
    [SuppressMessage("ReSharper", "InconsistentNaming")]
    [SuppressMessage("ReSharper", "PartialTypeWithSinglePart")]
    [GeneratedCode("TextTemplatingFileGenerator", "1.0.0")]
    [Table("<#= tableName #>", Schema = "<#= schemaName #>")]
    public partial class <#= tableName #>Entity : BaseEntity
    {<#
        foreach (var column in table)
        {
            var maxLength = (short) column["MaxLength"];
            var isNullable = (bool) column["IsNullable"];
            var columnName = column["ColumnName"].ToString();

            if (columnName.Contains(" ")) continue;

            var dataType = column["DataType"].ToString();
            var type = ConvertSqlTypeToDotNetType(dataType, (bool) column["IsNullable"]);

            if (IsSkip(columnName)) continue;
#>

        /// <summary>
        /// Gets or sets value from column [<#= columnName #>].
        /// </summary>
<#
            if (!isNullable)
            {
#>
        [Required]
<#
            } #>
<#
            if (type == "System.String" && maxLength > 0)
            {
#>
        [StringLength(<#= maxLength #>)]
<#
            } #>
        public virtual <#= type #> <#= columnName #> { get; set; }
<#
        }
#>    }
}
<#
    }
#>
